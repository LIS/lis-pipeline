#!/usr/bin/env groovy

properties ([
    pipelineTriggers([cron('H 1 * * *')])
])

env.WORK_DIR = "/mnt/tmp/watcher-kernel-stable"
env.KERNEL_TREE = "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git"
env.DISTRO = "Ubuntu_18.04.1;CentOS_7.5"
env.AZURE_BOOT_LARGE_FLAVOR = "Standard_E64_v3"
env.PRIORITY = "P1"
env.STAGES = "build_artifacts, publish_temp_artifacts, boot_test, boot_test_large, publish_artifacts, validation, validation_hyperv, publish_azure_vhd, validation_azure, publish_results, send_mail"

node ("meta_slave") {
    stage ("Trigger pipeline") {
        dir ("watcher-stable-${env.BUILD_NUMBER}-${env.BRANCH_NAME}") {
            checkout scm

            sh '''
                #!/bin/bash
                bash ./scripts/package_building/check_latest_tags.sh \\
                    --work_dir "$WORK_DIR" \\
                    --kernel_tree "$KERNEL_TREE" \\
                    --results "./results.txt"
            '''

            def runs = [:]
            def buildTags = readFile ("results.txt")
            def testDistros = env.DISTRO.split(";")
            buildTags = buildTags.split(";")

            buildTags.each() {
                def tag = it
                if (tag) {
                    testDistros.each {
                        def distro = it
                        runs["${distro}-${tag}"] = {
                            build (job: "Linux-Kernels-MSFT-and-Linux-Upstream/upstream-kernel-pipeline/master",
                                parameters: [
                                    string(name: 'KERNEL_GIT_URL', value: "${env.KERNEL_TREE}"),
                                    string(name: 'KERNEL_GIT_BRANCH', value: "${tag}"),
                                    string(name: 'DISTRO_VERSION', value: "${distro}"),
                                    string(name: 'PRIORITY', value: "${env.PRIORITY}"),
                                    string(name: 'KERNEL_DEBUG', value: "False"),
                                    string(name: 'LISAV2_AZURE_VM_SIZE_LARGE', value: "${env.AZURE_BOOT_LARGE_FLAVOR}"),
                                    string(name: 'ENABLED_STAGES', value: "${env.STAGES}")],
                                wait: true, propagate: true)
                        }
                    }
                }
            }

            parallel runs

            deleteDir()
        }
    }
}
